
                               与数据类型相关的字段
CharField
        作用:字符串字段, 用于较短的字符串.
        参数:CharField 要求必须有一个参数 maxlength, 用于从数据库层和Django
       校验层限制该字段所允许的最大字符数.
IntegerField
       作用:用于保存一个整数.
CommaSeparatedIntegerField
        作用:用于存放逗号分隔的整数值. 类似 CharField, 必须要有maxlength参数.
FloatField
        作用:一个浮点数,必须提供两个参数:         
        参数:max_digits,总位数(不包括小数点和符号), decimal_places,小数位数.
        示例1:要保存最大值为 999 (小数点后保存2位),你要这样定义字段:
              models.FloatField(..., max_digits=5, decimal_places=2)
        示例2:要保存最大值一百万(小数点后保存10位)的话,你要这样定义:  
              models.FloatField(..., max_digits=19, decimal_places=10)
              admin 用一个文本框(<input type="text">)表示该字段保存的数据

                              与时间相关的字段
DateField
        一个日期字段. 共有下列额外的可选参数:
        Argument    描述
        auto_now    当对象被保存时,自动将该字段的值设置为当前时间.通常用于表示 "last-modified" 时间戳.
        auto_now_add    当对象首次被创建时,自动将该字段的值设置为当前时间.通常用于表示对象创建时间.
        （仅仅在admin中有意义...)
 
DateTimeField
         一个日期时间字段. 类似 DateField 支持同样的附加选项.


                             与布尔值相关的字段
BooleanField
        A true/false field. admin用checkbox 来表示此类字段.
NullBooleanField
       类似 BooleanField, 不过允许 NULL 作为其中一个选项. 推荐使用这个字段而不要用 
       BooleanField 加 null=True 选项
       admin 用一个选择框 <select> (三个可选择的值: "Unknown", "Yes" 和 "No" ) 来表示这种字段数据.
                                                    


                              与校验相关的字段
IPAddressField
        一个字符串形式的 IP 地址, (i.e. "24.124.1.30").
EmailField
        一个带有检查Email合法性的 CharField,不接受 maxlength 参数.
XMLField
        一个校验值是否为合法XML的 TextField,必须提供参数: schema_path, 它是一个用来校验文本的 RelaxNG schema #的文件系统路径.


                                与上传相关的字段
FileField
     作用: 
          一个文件上传字段,要求一个必须有的参数
     参数: 
          upload_to, 一个用于保存上载文件的本地文件系统路径. 这个路径必须包含 strftime #formatting,
          该格式将被上载文件的 date/time替换(so that uploaded files don't fill up the given directory).
     说明: 
          admin 用一个<input type="file">部件表示该字段保存的数据(一个文件上传部件) .
ImageField
     作用: 类似FileField,不过要校验上传对象是否是一个合法图片.
     参数: 它有两个可选参数:height_field和width_field, 如果提供这两个参数, 则图片将按提供的高度和宽度规格保存.
注意事项:
     在一个model中使用FileField或ImageField需要以下步骤:
     (1)在你的settings文件中,定义一个完整路径给MEDIA_ROOT以便让Django在此处保存上传文件.
          (出于性能考虑,这些文件并不保存到数据库) 定义MEDIA_URL 作为该目录的公共 URL.要确保该目录对WEB服务器用户帐号是可写的.
     (2)在你的model中添加FileField或ImageField,并确保定义了upload_to选项,以告诉 Django使用MEDIA_ROOT的哪个子目录保存上传文件.
          你的数据库中要保存的只是文件的路径(相对于 MEDIA_ROOT).
          出于习惯你一定很想使用 Django 提供的 get_<#fieldname>_url 函数.
          举例来说,如果你的 ImageField叫作 mug_shot, 你就可以在模板中以 {{ object.#get_mug_shot_url }} 这样的方式得到图像的绝对路径.
                                                 
                                    不好分类的字段
AutoField
        一个 IntegerField, 添加记录时它会自动增长. 你通常不需要直接使用这个字段;
        自定义一个主键：my_id=models.AutoField(primary_key=True)
        如果你不指定主键的话,系统会自动添加一个主键字段到你的 model.
TextField
        一个容量很大的文本字段.
        admin 用一个 <textarea> (文本区域)表示该字段数据.(一个多行编辑框).
URLField
      作用: 用于保存 URL, 若verify_exists参数为True(默认), 给定的 URL 会预先检查是否存在( 即URL是否被有效装入且没有返回404响应).
      admin 用一个 <input type="text"> 文本框表示该字段保存的数据(一个单行编辑框)

FilePathField