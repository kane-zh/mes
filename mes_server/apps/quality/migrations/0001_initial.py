# Generated by Django 3.0.3 on 2020-10-16 19:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DefectGradeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='等级名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='等级编码(必须唯一)', max_length=32, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('rule', models.TextField(blank=True, help_text='此缺陷等级的评定规则是什么', null=True, verbose_name='评定规则')),
                ('influences', models.TextField(blank=True, help_text='此等级下的缺陷会产生什么影响', null=True, verbose_name='不良影响')),
                ('processing_method', models.TextField(blank=True, help_text='此等级下的缺陷产生时,应采取什么处理方式', null=True, verbose_name='处理方式')),
                ('attribute1', models.CharField(blank=True, help_text='当前附加属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前附加属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前附加属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前附加属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前附加属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
            ],
            options={
                'verbose_name': '品质管理－缺陷等级定义',
                'verbose_name_plural': '品质管理－缺陷等级定义',
                'db_table': 'DefectGradeDefinitionModel',
                'permissions': {('read_defectgradedefinitionmodel', 'Can read 品质管理－缺陷等级定义'), ('admin_defectgradedefinitionmodel', 'Can admin 品质管理－缺陷等级定义')},
            },
        ),
        migrations.CreateModel(
            name='DefectInforDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='缺陷名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='缺陷编码((与类型联合唯一))', max_length=32, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('rule', models.TextField(blank=True, help_text='此缺陷项的评定规则是什么', null=True, verbose_name='评定规则')),
                ('attribute1', models.CharField(blank=True, help_text='当前缺陷附件的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前缺陷附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前缺陷附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前缺陷附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前缺陷附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
            ],
            options={
                'verbose_name': '品质管理－缺陷信息定义',
                'verbose_name_plural': '品质管理－缺陷信息定义',
                'db_table': 'DefectInforDefinitionModel',
                'permissions': {('admin_defectinfordefinitionmodel', 'Can admin 品质管理－缺陷信息定义'), ('read_defectinfordefinitionmodel', 'Can read 品质管理－缺陷信息定义')},
            },
        ),
        migrations.CreateModel(
            name='InspectionReportItemModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('ok_sum', models.IntegerField(blank=True, help_text='合格数量', null=True, verbose_name='合格数量')),
                ('ng_sum', models.IntegerField(blank=True, help_text='不合格数量', null=True, verbose_name='不合格数量')),
                ('concession_sum', models.IntegerField(blank=True, help_text='让步接收数量', null=True, verbose_name='让步接收数量')),
                ('attribute1', models.CharField(blank=True, help_text='当前附加属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前附加属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前附加属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前附加属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前附加属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建账号', max_length=32, verbose_name='创建账号')),
                ('defect', models.ForeignKey(help_text='缺陷项信息', on_delete=django.db.models.deletion.CASCADE, to='quality.DefectInforDefinitionModel', verbose_name='缺陷项信息')),
            ],
            options={
                'verbose_name': '品质管理－检验汇报子项',
                'verbose_name_plural': '品质管理－检验汇报子项',
                'db_table': 'InspectionReportItemModel',
            },
        ),
        migrations.CreateModel(
            name='QualityAlterRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uri', models.CharField(blank=True, help_text='当前审核记录属于资源的名称', max_length=32, null=True, verbose_name='资源名称')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
            ],
            options={
                'verbose_name': '品质管理－审核记录',
                'verbose_name_plural': '品质管理－审核记录',
                'db_table': 'QualityAlterRecordModel',
            },
        ),
        migrations.CreateModel(
            name='QualityAuditRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uri', models.CharField(blank=True, help_text='当前操作的资源名称', max_length=32, null=True, verbose_name='资源名称')),
                ('uri_id', models.CharField(blank=True, help_text='当前操作的资源索引项', max_length=16, null=True, verbose_name='资源索引')),
                ('time', models.DateTimeField(auto_now_add=True, help_text='进行操作的时间', verbose_name='时间')),
                ('classes', models.CharField(blank=True, help_text='进行操作的类别', max_length=16, null=True, verbose_name='类别')),
                ('user', models.CharField(blank=True, help_text='进行操作的账号名称', max_length=32, null=True, verbose_name='账号')),
                ('result', models.CharField(blank=True, help_text='进行操作的结果', max_length=16, null=True, verbose_name='结果')),
                ('content', models.TextField(blank=True, help_text='进行当前操作具体涉及哪些内容', null=True, verbose_name='内容')),
            ],
            options={
                'verbose_name': '品质管理－操作记录',
                'verbose_name_plural': '品质管理－操作记录',
                'db_table': 'QualityAuditRecordModel',
                'permissions': {('read_qualityauditrecordmodel', 'Can read 品质管理－操作记录')},
            },
        ),
        migrations.CreateModel(
            name='QualityFileModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('file', models.FileField(help_text='当前APP文件', upload_to='quality/file/')),
                ('file_name', models.CharField(blank=True, help_text='当前文件的名称', max_length=32, null=True, verbose_name='文件名')),
                ('uri', models.CharField(blank=True, help_text='当前文件属于资源的名称', max_length=32, null=True, verbose_name='资源名')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
            ],
            options={
                'verbose_name': '品质管理－文件项',
                'verbose_name_plural': '品质管理－文件项',
                'db_table': 'QualityFileModel',
            },
        ),
        migrations.CreateModel(
            name='QualityImageModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('image', models.ImageField(help_text='当前APP照片', upload_to='quality/image/')),
                ('image_name', models.CharField(blank=True, help_text='当前图片的名称', max_length=32, null=True, verbose_name='照片名')),
                ('uri', models.CharField(blank=True, help_text='当前图片属于资源的名称', max_length=32, null=True, verbose_name='资源名')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
            ],
            options={
                'verbose_name': '品质管理－图片项',
                'verbose_name_plural': '品质管理－图片项',
                'db_table': 'QualityImageModel',
            },
        ),
        migrations.CreateModel(
            name='QualityBoardModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='品质看板名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='品质看板编号(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的使用状态', max_length=16, verbose_name='状态')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前看板的文件信息', to='quality.QualityFileModel', verbose_name='文件')),
                ('image', models.ForeignKey(help_text='当前看板的缩略图', on_delete=django.db.models.deletion.CASCADE, to='quality.QualityImageModel', verbose_name='缩略图')),
            ],
            options={
                'verbose_name': '品质管理－品质看板定义',
                'verbose_name_plural': '品质管理－品质看板定义',
                'db_table': 'QualityBoardModel',
                'permissions': {('admin_qualityboardmodel', 'Can admin 品质管理－品质看板定义'), ('read_qualityboardmodel', 'Can read 品质管理－品质看板定义')},
            },
        ),
        migrations.CreateModel(
            name='InspectionStandardTypeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='检验标准类型名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='检验标准类型编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('classes', models.CharField(choices=[('一级类别', '一级类别'), ('二级类别', '二级类别'), ('三级类别', '三级类别'), ('四级类别', '四级类别')], help_text='检验标准类型处于的层级类别', max_length=16, verbose_name='类别')),
                ('attach_attribute', models.TextField(blank=True, help_text='当前检验标准类型下检验标准的附加属性', null=True, verbose_name='检验标准附加属性')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前检验标准类型的文件信息', to='quality.QualityFileModel', verbose_name='检验标准类型文件')),
                ('parent', models.ForeignKey(blank=True, help_text='当前检验标准类型属于的上一级别', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inspectionStandardType_child', to='quality.InspectionStandardTypeDefinitionModel', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '品质管理－检验标准类型定义',
                'verbose_name_plural': '品质管理－检验标准类型定义',
                'db_table': 'InspectionStandardTypeDefinitionModel',
                'permissions': {('admin_inspectionstandardtypedefinitionmodel', 'Can admin 品质管理－检验标准类型定义'), ('read_inspectionstandardtypedefinitionmodel', 'Can read 品质管理－检验标准类型定义')},
            },
        ),
        migrations.CreateModel(
            name='InspectionReportTypeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='检验汇报类型名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='检验汇报类型编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('classes', models.CharField(choices=[('一级类别', '一级类别'), ('二级类别', '二级类别'), ('三级类别', '三级类别'), ('四级类别', '四级类别')], help_text='检验汇报类型处于的层级类别', max_length=16, verbose_name='类别')),
                ('attach_attribute', models.TextField(blank=True, help_text='当前检验汇报类型下检验汇报的附加属性', null=True, verbose_name='检验汇报附加属性')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前检验汇报类型的文件信息', to='quality.QualityFileModel', verbose_name='检验汇报类型文件')),
                ('parent', models.ForeignKey(blank=True, help_text='当前检验汇报类型属于的上一级别', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='InspectionReportType_child', to='quality.InspectionReportTypeDefinitionModel', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '品质管理－检验汇报类型定义',
                'verbose_name_plural': '品质管理－检验汇报类型定义',
                'db_table': 'InspectionReportTypeDefinitionModel',
                'permissions': {('admin_inspectionreporttypedefinitionmodel', 'Can admin 品质管理－检验汇报类型定义'), ('read_inspectionreporttypedefinitionmodel', 'Can read 品质管理－检验汇报类型定义')},
            },
        ),
        migrations.CreateModel(
            name='InspectionReportModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='检验汇报名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(blank=True, help_text='检验汇报编码(与类型联合唯一)', max_length=32, null=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('完成', '完成'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('submit_sum', models.IntegerField(help_text='报检数量', verbose_name='报检数量')),
                ('samples_sum', models.IntegerField(help_text='检测数量', verbose_name='检测数量')),
                ('ok_sum', models.IntegerField(blank=True, help_text='合格数量', null=True, verbose_name='合格数量')),
                ('ng_sum', models.IntegerField(blank=True, help_text='不合格数量', null=True, verbose_name='不合格数量')),
                ('concession_sum', models.IntegerField(blank=True, help_text='让步接收数量', null=True, verbose_name='让步接收数量')),
                ('result', models.CharField(choices=[('合格', '合格'), ('不合格', '不合格'), ('让步接收', '让步接收')], help_text='检测结果', max_length=32, verbose_name='检测结果')),
                ('handler', models.CharField(blank=True, help_text='对当前信息进行操作的是谁', max_length=32, null=True, verbose_name='操作者')),
                ('dataTime', models.DateTimeField(blank=True, help_text='当前检验的时间', null=True, verbose_name='检验时间')),
                ('attribute1', models.CharField(blank=True, help_text='当前检验汇报附加的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前检验汇报附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前检验汇报附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前检验汇报附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前检验汇报附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录')),
                ('child', models.ManyToManyField(blank=True, help_text='当前检验汇报子项', to='quality.InspectionReportItemModel', verbose_name='检验汇报子项')),
                ('file', models.ManyToManyField(blank=True, help_text='当前检验汇报的文件信息', to='quality.QualityFileModel', verbose_name='文件')),
                ('image', models.ManyToManyField(blank=True, help_text='当前记录项的照片信息', to='quality.QualityImageModel', verbose_name='照片')),
                ('type', models.ForeignKey(help_text='当前检验汇报属于的检验汇报类型', on_delete=django.db.models.deletion.CASCADE, related_name='InspectionReportType_item', to='quality.InspectionReportTypeDefinitionModel', verbose_name='类型')),
            ],
            options={
                'verbose_name': '品质管理－检验汇报',
                'verbose_name_plural': '品质管理－检验汇报',
                'db_table': 'InspectionReportModel',
                'permissions': {('read_inspectionreportmodel', 'Can read 品质管理－检验汇报'), ('admin_inspectionreportmodel', 'Can admin 品质管理－检验汇报')},
            },
        ),
        migrations.AddField(
            model_name='inspectionreportitemmodel',
            name='file',
            field=models.ManyToManyField(blank=True, help_text='当前记录子项的文件信息', to='quality.QualityFileModel', verbose_name='文件'),
        ),
        migrations.AddField(
            model_name='inspectionreportitemmodel',
            name='image',
            field=models.ManyToManyField(blank=True, help_text='当前记录子项的照片信息', to='quality.QualityImageModel', verbose_name='照片'),
        ),
        migrations.CreateModel(
            name='DefectTypeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='缺陷类型名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='缺陷类型编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('classes', models.CharField(choices=[('一级类别', '一级类别'), ('二级类别', '二级类别'), ('三级类别', '三级类别'), ('四级类别', '四级类别')], help_text='缺陷类型处于的层级类别', max_length=16, verbose_name='类别')),
                ('attach_attribute', models.TextField(blank=True, help_text='当前缺陷类型下缺陷的附加属性', null=True, verbose_name='缺陷附加属性')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前缺陷类型的文件信息', to='quality.QualityFileModel', verbose_name='缺陷类型文件')),
                ('parent', models.ForeignKey(blank=True, help_text='当前缺陷类型属于的上一级别', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='defectType_child', to='quality.DefectTypeDefinitionModel', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '品质管理－缺陷类型定义',
                'verbose_name_plural': '品质管理－缺陷类型定义',
                'db_table': 'DefectTypeDefinitionModel',
                'permissions': {('admin_defecttypedefinitionmodel', 'Can admin 品质管理－缺陷类型定义'), ('read_defecttypedefinitionmodel', 'Can read 品质管理－缺陷类型定义')},
            },
        ),
        migrations.AddField(
            model_name='defectinfordefinitionmodel',
            name='alter',
            field=models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录'),
        ),
        migrations.AddField(
            model_name='defectinfordefinitionmodel',
            name='defect_grade',
            field=models.ForeignKey(help_text='当前缺陷属于的等级', on_delete=django.db.models.deletion.CASCADE, related_name='defectGrade_defectInfor', to='quality.DefectGradeDefinitionModel', verbose_name='缺陷等级'),
        ),
        migrations.AddField(
            model_name='defectinfordefinitionmodel',
            name='file',
            field=models.ManyToManyField(blank=True, help_text='当前缺陷的文件信息', to='quality.QualityFileModel', verbose_name='缺陷文件'),
        ),
        migrations.AddField(
            model_name='defectinfordefinitionmodel',
            name='image',
            field=models.ManyToManyField(blank=True, help_text='当前缺陷的照片信息', to='quality.QualityImageModel', verbose_name='缺陷图片'),
        ),
        migrations.AddField(
            model_name='defectinfordefinitionmodel',
            name='type',
            field=models.ForeignKey(help_text='当前缺陷属于的缺陷类型', on_delete=django.db.models.deletion.CASCADE, related_name='defectType_item', to='quality.DefectTypeDefinitionModel', verbose_name='类型'),
        ),
        migrations.AddField(
            model_name='defectgradedefinitionmodel',
            name='alter',
            field=models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录'),
        ),
        migrations.AddField(
            model_name='defectgradedefinitionmodel',
            name='file',
            field=models.ManyToManyField(blank=True, help_text='当前缺陷等级的文件信息', to='quality.QualityFileModel', verbose_name='产品文件'),
        ),
        migrations.CreateModel(
            name='InspectionStandardDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='检验标准名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='检验标准编码(与类型联合唯一)', max_length=32, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('samples_ration', models.IntegerField(help_text='当前标准要求抽检数量占报检数量的比例', verbose_name='检验比例')),
                ('ok_ration', models.IntegerField(help_text='当前标准要求合格数量占抽检数量的比例', verbose_name='合格比例')),
                ('ng_ration', models.IntegerField(help_text='当前标准要求不合格数量占抽检数量的比例', verbose_name='不合格比例')),
                ('concession_ration', models.IntegerField(help_text='当前标准要求让步接收数量占抽检数量的比例', verbose_name='让步接收比例')),
                ('attribute1', models.CharField(blank=True, help_text='当前检验标准附加的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前检验标准附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前检验标准附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前检验标准附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前检验标准附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='quality.QualityAlterRecordModel', verbose_name='审核记录')),
                ('defect', models.ManyToManyField(blank=True, help_text='当前检验标准的缺陷子项', related_name='defectInfor_inspectionStandard', to='quality.DefectInforDefinitionModel', verbose_name='缺陷子项')),
                ('file', models.ManyToManyField(blank=True, help_text='当前检验标准的文件信息', to='quality.QualityFileModel', verbose_name='文件')),
                ('type', models.ForeignKey(help_text='当前检验标准属于的检验标准类型', on_delete=django.db.models.deletion.CASCADE, related_name='inspectionStandardType_item', to='quality.InspectionStandardTypeDefinitionModel', verbose_name='类型')),
            ],
            options={
                'verbose_name': '品质管理－检验标准定义',
                'verbose_name_plural': '品质管理－检验标准定义',
                'db_table': 'InspectionStandardDefinitionModel',
                'permissions': {('read_inspectionstandarddefinitionmodel', 'Can read 品质管理－检验标准定义'), ('admin_inspectionstandarddefinitionmodel', 'Can admin 品质管理－检验标准定义')},
                'unique_together': {('code', 'type')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='defectinfordefinitionmodel',
            unique_together={('code', 'type')},
        ),
    ]
