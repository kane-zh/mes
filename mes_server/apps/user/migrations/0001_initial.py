# Generated by Django 3.0.3 on 2020-10-10 14:55

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAuditRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uri', models.CharField(blank=True, help_text='当前操作的资源名称', max_length=32, null=True, verbose_name='资源名称')),
                ('uri_id', models.CharField(blank=True, help_text='当前操作的资源索引项', max_length=16, null=True, verbose_name='资源索引')),
                ('time', models.DateTimeField(auto_now_add=True, help_text='进行操作的时间', verbose_name='时间')),
                ('classes', models.CharField(blank=True, help_text='进行操作的类别', max_length=16, null=True, verbose_name='类别')),
                ('user', models.CharField(blank=True, help_text='进行操作的账号名称', max_length=16, null=True, verbose_name='账号')),
                ('result', models.CharField(blank=True, help_text='进行操作的结果', max_length=16, null=True, verbose_name='结果')),
                ('content', models.TextField(blank=True, help_text='进行当前操作具体涉及哪些内容', null=True, verbose_name='内容')),
            ],
            options={
                'verbose_name': '账号管理---操作记录',
                'verbose_name_plural': '账号管理---操作记录',
                'db_table': 'UserAuditRecordModel',
                'permissions': {('read_userauditrecordmodel', 'Can read 账号管理---操作记录')},
            },
        ),
        migrations.CreateModel(
            name='UserInforModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('job_number', models.CharField(blank=True, help_text='当前用户的工号', max_length=20, null=True, verbose_name='工号')),
                ('post', models.CharField(blank=True, help_text='当前用户的职位', max_length=20, null=True, verbose_name='职位')),
                ('wechat', models.CharField(blank=True, help_text='当前用户的微信', max_length=16, null=True, verbose_name='微信')),
                ('mobile', models.CharField(blank=True, help_text='当前用户的手机号码', max_length=11, null=True, verbose_name='手机')),
                ('image', models.ImageField(blank=True, help_text='当前用户的照片', null=True, upload_to='user/image/', verbose_name='照片')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=16, verbose_name='审核账号')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建当前用户的时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更改当前用户信息的时间', verbose_name='更新时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '账号管理---账号信息',
                'verbose_name_plural': '账号管理---账号信息',
                'db_table': 'UserInforModel',
                'permissions': {('admin_userinformodel', 'Can admin 账号管理---账号信息'), ('read_userinformodel', 'Can read 账号管理---账号信息')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
