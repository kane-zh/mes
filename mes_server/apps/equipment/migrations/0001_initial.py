# Generated by Django 3.0.3 on 2020-10-16 19:02

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentAccountModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='设备名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='设备编码((与类型联合唯一))', max_length=32, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='设备信息的使用状态', max_length=16, verbose_name='状态')),
                ('affiliation', models.CharField(blank=True, help_text='当前设备归属于那个公司/部门', max_length=32, null=True, verbose_name='归属单位')),
                ('location', models.CharField(blank=True, help_text='当前设备所在的地理位置(地址)', max_length=32, null=True, verbose_name='地理位置')),
                ('principal', models.CharField(blank=True, help_text='当前设备的责任人是谁', max_length=32, null=True, verbose_name='责任人')),
                ('depreciationRate', models.CharField(blank=True, help_text='当前设备的折旧率', max_length=32, null=True, verbose_name='折旧率')),
                ('dataOfActivation', models.DateTimeField(blank=True, help_text='当前设备开始使用的时间', null=True, verbose_name='启用日期')),
                ('dataOfPurchase', models.DateTimeField(blank=True, help_text='当前设备购买的时间', null=True, verbose_name='购买日期')),
                ('attribute1', models.CharField(blank=True, help_text='当前设备附加的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前设备附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前设备附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前设备附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前设备附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
            ],
            options={
                'verbose_name': '设备管理－设备台账定义',
                'verbose_name_plural': '设备管理－设备台账定义',
                'db_table': 'EquipmentAccountModel',
                'permissions': {('read_equipmentaccountmodel', 'Can read 设备管理－设备台账定义'), ('admin_equipmentaccountmodel', 'Can admin 设备管理－设备台账定义')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentAlterRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uri', models.CharField(blank=True, help_text='当前审核记录属于资源的名称', max_length=32, null=True, verbose_name='资源名称')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
            ],
            options={
                'verbose_name': '设备管理－审核记录',
                'verbose_name_plural': '设备管理－审核记录',
                'db_table': 'EquipmentAlterRecordModel',
            },
        ),
        migrations.CreateModel(
            name='EquipmentAuditRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('uri', models.CharField(blank=True, help_text='当前操作的资源名称', max_length=32, null=True, verbose_name='资源名称')),
                ('uri_id', models.CharField(blank=True, help_text='当前操作的资源索引项', max_length=16, null=True, verbose_name='资源索引')),
                ('time', models.DateTimeField(auto_now_add=True, help_text='进行操作的时间', verbose_name='时间')),
                ('classes', models.CharField(blank=True, help_text='进行操作的类别', max_length=16, null=True, verbose_name='类别')),
                ('user', models.CharField(blank=True, help_text='进行操作的账号名称', max_length=32, null=True, verbose_name='账号')),
                ('result', models.CharField(blank=True, help_text='进行操作的结果', max_length=16, null=True, verbose_name='结果')),
                ('content', models.TextField(blank=True, help_text='进行当前操作具体涉及哪些内容', null=True, verbose_name='内容')),
            ],
            options={
                'verbose_name': '设备管理－操作记录',
                'verbose_name_plural': '设备管理－操作记录',
                'db_table': 'EquipmentAuditRecordModel',
                'permissions': {('read_equipmentauditrecordmodel', 'Can read 设备管理－操作记录')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentFileModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('file', models.FileField(help_text='当前APP文件', upload_to='equipment/file/')),
                ('file_name', models.CharField(blank=True, help_text='当前文件的名称', max_length=32, null=True, verbose_name='文件名')),
                ('uri', models.CharField(blank=True, help_text='当前文件属于资源的名称', max_length=32, null=True, verbose_name='资源名')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
            ],
            options={
                'verbose_name': '设备管理－文件项',
                'verbose_name_plural': '设备管理－文件项',
                'db_table': 'EquipmentFileModel',
            },
        ),
        migrations.CreateModel(
            name='EquipmentImageModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('image', models.ImageField(help_text='当前APP照片', upload_to='equipment/image/')),
                ('image_name', models.CharField(blank=True, help_text='当前图片的名称', max_length=32, null=True, verbose_name='照片名')),
                ('uri', models.CharField(blank=True, help_text='当前图片属于资源的名称', max_length=32, null=True, verbose_name='资源名')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
            ],
            options={
                'verbose_name': '设备管理－图片项',
                'verbose_name_plural': '设备管理－图片项',
                'db_table': 'EquipmentImageModel',
            },
        ),
        migrations.CreateModel(
            name='EquipmentVendorDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='设备供应商(内部)名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='设备供应商(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前设备供应商信息的使用状态', max_length=16, verbose_name='状态')),
                ('address', models.CharField(blank=True, help_text='当前设备供应商公司所在的地址', max_length=32, null=True, verbose_name='地址')),
                ('mobile', models.CharField(blank=True, help_text='当前设备供应商联系电话', max_length=32, null=True, verbose_name='电话')),
                ('fax', models.CharField(blank=True, help_text='当前设备供应商的传真号码', max_length=32, null=True, verbose_name='传真')),
                ('wechat', models.CharField(blank=True, help_text='当前设备供应商微信号码', max_length=32, null=True, verbose_name='微信')),
                ('company_name', models.CharField(blank=True, help_text='当前设备供应商公司全称', max_length=32, null=True, verbose_name='公司全称')),
                ('company_abbre', models.CharField(blank=True, help_text='当前设备供应商公司简称', max_length=32, null=True, verbose_name='公司简称')),
                ('attribute1', models.CharField(blank=True, help_text='当前附加属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前附加属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前附加属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前附加属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前附加属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前设备供应商的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件')),
                ('image', models.ManyToManyField(blank=True, help_text='当前设备供应商的照片信息', to='equipment.EquipmentImageModel', verbose_name='照片')),
            ],
            options={
                'verbose_name': '设备管理－设备厂商定义',
                'verbose_name_plural': '设备管理－设备厂商定义',
                'db_table': 'EquipmentVendorDefinitionModel',
                'permissions': {('admin_equipmentvendordefinitionmodel', 'Can admin 设备管理－设备厂商定义'), ('read_equipmentvendordefinitionmodel', 'Can read 设备管理－设备厂商定义')},
            },
        ),
        migrations.CreateModel(
            name='MaintainRecordItemModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('compoment', models.CharField(help_text='进行此次维护消耗的部件', max_length=32, verbose_name='部件')),
                ('method', models.TextField(blank=True, help_text='维护方法', null=True, verbose_name='维护方法')),
                ('result', models.CharField(blank=True, help_text='进行此次维护消耗的结果', max_length=32, null=True, verbose_name='维护结果')),
                ('attribute1', models.CharField(blank=True, help_text='当前班组的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前班组的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前班组的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前班组的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前班组的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('file', models.ManyToManyField(blank=True, help_text='当前维护记录子项的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件')),
                ('image', models.ManyToManyField(blank=True, help_text='当前维护记录子项的照片信息', to='equipment.EquipmentImageModel', verbose_name='照片')),
            ],
            options={
                'verbose_name': '设备管理－维护记录子项',
                'verbose_name_plural': '设备管理－维护记录子项',
                'db_table': 'MaintainRecordItemModel',
            },
        ),
        migrations.CreateModel(
            name='PartsInforDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='配件名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='配件编码(与类型联合唯一)', max_length=32, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='配件信息的使用状态', max_length=16, verbose_name='状态')),
                ('attribute1', models.CharField(blank=True, help_text='当前配件附加的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前配件附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前配件附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前配件附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前配件附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前配件的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件')),
                ('image', models.ManyToManyField(blank=True, help_text='当前配件的照片信息', to='equipment.EquipmentImageModel', verbose_name='照片')),
            ],
            options={
                'verbose_name': '设备管理－配件信息定义',
                'verbose_name_plural': '设备管理－配件信息定义',
                'db_table': 'PartsInforDefinitionModel',
                'permissions': {('read_partsinfordefinitionmodel', 'Can read 设备管理－配件信息定义'), ('admin_partsinfordefinitionmodel', 'Can admin 设备管理－配件信息定义')},
            },
        ),
        migrations.CreateModel(
            name='PartsUseRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='配件消耗记录名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='配件消耗记录编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('完成', '完成'), ('作废', '作废')], default='新建', help_text='配件消耗记录的使用状态', max_length=16, verbose_name='状态')),
                ('sum', models.IntegerField(help_text='当前消耗数量', verbose_name='使用数量')),
                ('dataTime', models.DateTimeField(blank=True, help_text='当前配件消耗的时间', null=True, verbose_name='使用时间')),
                ('handler', models.CharField(blank=True, help_text='进行操作的人员是', max_length=32, null=True, verbose_name='操作者')),
                ('attribute1', models.CharField(blank=True, help_text='当前班组的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前班组的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前班组的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前班组的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前班组的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前配件消耗记录的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件')),
                ('parts', models.ForeignKey(help_text='当前消耗项对应的备品', on_delete=django.db.models.deletion.CASCADE, to='equipment.PartsInforDefinitionModel', verbose_name='备品')),
            ],
            options={
                'verbose_name': '设备管理－配件消耗记录',
                'verbose_name_plural': '设备管理－配件消耗记录',
                'db_table': 'PartsUseRecordModel',
                'permissions': {('read_partsuserecordmodel', 'Can read 设备管理－配件消耗记录'), ('admin_partsuserecordmodel', 'Can admin 设备管理－配件消耗记录')},
            },
        ),
        migrations.CreateModel(
            name='PartsTypeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='配件类型名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='配件类型编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('classes', models.CharField(choices=[('一级类别', '一级类别'), ('二级类别', '二级类别'), ('三级类别', '三级类别'), ('四级类别', '四级类别')], help_text='配件类型处于的层级类别', max_length=16, verbose_name='类别')),
                ('attach_attribute', models.TextField(blank=True, help_text='当前配件类型下配件的附加属性', null=True, verbose_name='配件附加属性')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前配件类型的文件信息', to='equipment.EquipmentFileModel', verbose_name='配件类型文件')),
                ('parent', models.ForeignKey(blank=True, help_text='当前配件类型属于的上一级别', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partsType_child', to='equipment.PartsTypeDefinitionModel', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '设备管理－配件类型定义',
                'verbose_name_plural': '设备管理－配件类型定义',
                'db_table': 'PartsTypeDefinitionModel',
                'permissions': {('admin_partstypedefinitionmodel', 'Can admin 设备管理－配件类型定义'), ('read_partstypedefinitionmodel', 'Can read 设备管理－配件类型定义')},
            },
        ),
        migrations.AddField(
            model_name='partsinfordefinitionmodel',
            name='type',
            field=models.ForeignKey(help_text='当前配件属于的类型', on_delete=django.db.models.deletion.CASCADE, related_name='partsType_item', to='equipment.PartsTypeDefinitionModel', verbose_name='类型'),
        ),
        migrations.AddField(
            model_name='partsinfordefinitionmodel',
            name='vendor',
            field=models.ForeignKey(help_text='当前配件的厂商信息', on_delete=django.db.models.deletion.CASCADE, related_name='vendor_parts', to='equipment.EquipmentVendorDefinitionModel', verbose_name='设备厂商'),
        ),
        migrations.CreateModel(
            name='MaintainRecordTypeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='维护记录类型名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='维护记录类型编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('classes', models.CharField(choices=[('一级类别', '一级类别'), ('二级类别', '二级类别'), ('三级类别', '三级类别'), ('四级类别', '四级类别')], help_text='维护记录类型处于的层级类别', max_length=16, verbose_name='类别')),
                ('attach_attribute', models.TextField(blank=True, help_text='当前维护记录类型下维护记录的附加属性', null=True, verbose_name='维护记录附加属性')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前维护记录类型的文件信息', to='equipment.EquipmentFileModel', verbose_name='维护记录类型文件')),
                ('parent', models.ForeignKey(blank=True, help_text='当前维护记录类型属于的上一级别', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintainRecordType_child', to='equipment.MaintainRecordTypeDefinitionModel', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '设备管理－维护记录类型定义',
                'verbose_name_plural': '设备管理－维护记录类型定义',
                'db_table': 'MaintainRecordTypeDefinitionModel',
                'permissions': {('read_maintainrecordtypedefinitionmodel', 'Can read 设备管理－维护记录类型定义'), ('admin_maintainrecordtypedefinitionmodel', 'Can admin 设备管理－维护记录类型定义')},
            },
        ),
        migrations.CreateModel(
            name='MaintainRecordModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='维护记录名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(blank=True, help_text='维护记录编码(与类型联合唯一)', max_length=32, null=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('完成', '完成'), ('作废', '作废')], default='新建', help_text='设备维护信息的使用状态', max_length=16, verbose_name='状态')),
                ('attribute1', models.CharField(blank=True, help_text='当前维护记录附加的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前维护记录附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前维护记录附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前维护记录附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前维护记录附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('dataTime', models.DateTimeField(blank=True, help_text='当前设备维修的时间', null=True, verbose_name='维修时间')),
                ('handler', models.CharField(blank=True, help_text='进行维修的人员是', max_length=32, null=True, verbose_name='操作者')),
                ('time_consuming', models.CharField(blank=True, help_text='进行此次维护消耗的时间', max_length=32, null=True, verbose_name='维护耗时')),
                ('result', models.CharField(blank=True, help_text='进行此次维护消耗的结果', max_length=32, null=True, verbose_name='维护结果')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('child', models.ManyToManyField(blank=True, help_text='当前检验记录子项', to='equipment.MaintainRecordItemModel', verbose_name='维护记录子项')),
                ('equipment', models.ForeignKey(help_text='当前维修记录对应的设备', on_delete=django.db.models.deletion.CASCADE, related_name='equipment_maintainRecord', to='equipment.EquipmentAccountModel', verbose_name='设备')),
                ('file', models.ManyToManyField(blank=True, help_text='当前维护记录的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件')),
                ('image', models.ManyToManyField(blank=True, help_text='当前维护记录的照片信息', to='equipment.EquipmentImageModel', verbose_name='照片')),
                ('parts_use', models.ManyToManyField(blank=True, help_text='进行当前维护消耗的备品记录', related_name='partsUserRecord_maintainRecord', to='equipment.PartsUseRecordModel', verbose_name='备品消耗')),
                ('type', models.ForeignKey(help_text='当前维护的维护类型', on_delete=django.db.models.deletion.CASCADE, related_name='maintainRecordType_item', to='equipment.MaintainRecordTypeDefinitionModel', verbose_name='类型')),
            ],
            options={
                'verbose_name': '设备管理－维护信息记录',
                'verbose_name_plural': '设备管理－维护信息记录',
                'db_table': 'MaintainRecordModel',
                'permissions': {('read_maintainrecordmodel', 'Can read 设备管理－维护信息记录'), ('admin_maintainrecordmodel', 'Can admin 设备管理－维护信息记录')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentTypeDefinitionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='设备类型名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='设备类型编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的状态', max_length=16, verbose_name='状态')),
                ('classes', models.CharField(choices=[('一级类别', '一级类别'), ('二级类别', '二级类别'), ('三级类别', '三级类别'), ('四级类别', '四级类别')], help_text='设备类型处于的层级类别', max_length=16, verbose_name='类别')),
                ('attach_attribute', models.TextField(blank=True, help_text='当前设备类型下设备的附加属性', null=True, verbose_name='设备附加属性')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前设备类型的文件信息', to='equipment.EquipmentFileModel', verbose_name='设备类型文件')),
                ('parent', models.ForeignKey(blank=True, help_text='当前设备类型属于的上一级别', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipmentType_child', to='equipment.EquipmentTypeDefinitionModel', verbose_name='父类别')),
            ],
            options={
                'verbose_name': '设备管理－设备类型定义',
                'verbose_name_plural': '设备管理－设备类型定义',
                'db_table': 'EquipmentTypeDefinitionModel',
                'permissions': {('read_equipmenttypedefinitionmodel', 'Can read 设备管理－设备类型定义'), ('admin_equipmenttypedefinitionmodel', 'Can admin 设备管理－设备类型定义')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentStateModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='设备状态信息名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='设备状态信息编码(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('type', models.CharField(blank=True, help_text='当前记录下设备的状态类型', max_length=32, null=True, verbose_name='状态类型')),
                ('runTime', models.CharField(blank=True, help_text='当前记录下设备的运行时长', max_length=32, null=True, verbose_name='运行时长')),
                ('allTime', models.CharField(blank=True, help_text='当前记录下设备的总开机时长', max_length=32, null=True, verbose_name='总时长')),
                ('sum', models.CharField(blank=True, help_text='当前完成数量', max_length=32, null=True, verbose_name='完成数量')),
                ('task', models.CharField(blank=True, help_text='当前加工的任务号', max_length=32, null=True, verbose_name='任务号')),
                ('util_rate', models.CharField(blank=True, help_text='当前设备稼动率', max_length=32, null=True, verbose_name='稼动率')),
                ('comp_rate', models.CharField(blank=True, help_text='当前设备完成率', max_length=32, null=True, verbose_name='完成率')),
                ('handler', models.CharField(blank=True, help_text='进行操作的人员是', max_length=32, null=True, verbose_name='操作者')),
                ('attribute1', models.CharField(blank=True, help_text='当前设备状态附加的属性1', max_length=32, null=True, verbose_name='属性1')),
                ('attribute2', models.CharField(blank=True, help_text='当前设备状态附加的属性2', max_length=32, null=True, verbose_name='属性2')),
                ('attribute3', models.CharField(blank=True, help_text='当前设备状态附加的属性3', max_length=32, null=True, verbose_name='属性3')),
                ('attribute4', models.CharField(blank=True, help_text='当前设备状态附加的属性4', max_length=32, null=True, verbose_name='属性4')),
                ('attribute5', models.CharField(blank=True, help_text='当前设备状态附加的属性5', max_length=32, null=True, verbose_name='属性5')),
                ('attribute6', models.CharField(blank=True, help_text='当前设备状态附加的属性6', max_length=32, null=True, verbose_name='属性6')),
                ('attribute7', models.CharField(blank=True, help_text='当前设备状态附加的属性7', max_length=32, null=True, verbose_name='属性7')),
                ('attribute8', models.CharField(blank=True, help_text='当前设备状态附加的属性8', max_length=32, null=True, verbose_name='属性8')),
                ('attribute9', models.CharField(blank=True, help_text='当前设备状态附加的属性9', max_length=32, null=True, verbose_name='属性9')),
                ('attribute10', models.CharField(blank=True, help_text='当前设备状态附加的属性10', max_length=32, null=True, verbose_name='属性10')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('equipment', models.ForeignKey(help_text='当前记录下的设备', on_delete=django.db.models.deletion.CASCADE, to='equipment.EquipmentAccountModel', verbose_name='设备')),
            ],
            options={
                'verbose_name': '设备管理－设备状态信息',
                'verbose_name_plural': '设备管理－设备状态信息',
                'db_table': 'EquipmentStateModel',
                'permissions': {('admin_equipmentstatemodel', 'Can admin 设备管理－设备状态信息'), ('read_equipmentstatemodel', 'Can read 设备管理－设备状态信息')},
            },
        ),
        migrations.CreateModel(
            name='EquipmentBoardModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, help_text='设备看板名称(建议唯一)', max_length=32, null=True, verbose_name='名称')),
                ('code', models.CharField(help_text='设备看板编号(必须唯一)', max_length=32, unique=True, verbose_name='编码')),
                ('state', models.CharField(choices=[('新建', '新建'), ('审核中', '审核中'), ('使用中', '使用中'), ('作废', '作废')], default='新建', help_text='当前信息的使用状态', max_length=16, verbose_name='状态')),
                ('desc', models.TextField(blank=True, help_text='当前信息未列出的字段项，可以在此字段描述.每一项用;隔开', null=True, verbose_name='备注')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='当前信息创建的时间,后台会自动填充此字段', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='当前信息最后的更新时间,后台会自动填充此字段', verbose_name='更新时间')),
                ('create_user', models.CharField(help_text='创建当前信息的账号名称', max_length=32, verbose_name='创建账号')),
                ('auditor', models.CharField(help_text='可对当前信息进行审核的账号名称', max_length=32, verbose_name='审核账号')),
                ('alter', models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录')),
                ('file', models.ManyToManyField(blank=True, help_text='当前看板的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件')),
                ('image', models.ForeignKey(help_text='当前看板的缩略图', on_delete=django.db.models.deletion.CASCADE, to='equipment.EquipmentImageModel', verbose_name='缩略图')),
            ],
            options={
                'verbose_name': '设备管理－设备看板定义',
                'verbose_name_plural': '设备管理－设备看板定义',
                'db_table': 'EquipmentBoardModel',
                'permissions': {('admin_equipmentboardmodel', 'Can admin 设备管理－设备看板定义'), ('read_equipmentboardmodel', 'Can read 设备管理－设备看板定义')},
            },
        ),
        migrations.AddField(
            model_name='equipmentaccountmodel',
            name='alter',
            field=models.ManyToManyField(blank=True, help_text='当前信息的审核记录', to='equipment.EquipmentAlterRecordModel', verbose_name='审核记录'),
        ),
        migrations.AddField(
            model_name='equipmentaccountmodel',
            name='file',
            field=models.ManyToManyField(blank=True, help_text='当前设备的文件信息', to='equipment.EquipmentFileModel', verbose_name='文件'),
        ),
        migrations.AddField(
            model_name='equipmentaccountmodel',
            name='image',
            field=models.ManyToManyField(blank=True, help_text='当前设备的照片信息', to='equipment.EquipmentImageModel', verbose_name='照片'),
        ),
        migrations.AddField(
            model_name='equipmentaccountmodel',
            name='parts',
            field=models.ManyToManyField(blank=True, help_text='当前设备的配件信息', related_name='parts_equipment', to='equipment.PartsInforDefinitionModel', verbose_name='配件'),
        ),
        migrations.AddField(
            model_name='equipmentaccountmodel',
            name='type',
            field=models.ForeignKey(help_text='当前设备属于的设备类型', on_delete=django.db.models.deletion.CASCADE, related_name='equipmentType_item', to='equipment.EquipmentTypeDefinitionModel', verbose_name='类型'),
        ),
        migrations.AddField(
            model_name='equipmentaccountmodel',
            name='vendor',
            field=models.ForeignKey(help_text='当前设备的厂商信息', on_delete=django.db.models.deletion.CASCADE, related_name='vendor_equipment', to='equipment.EquipmentVendorDefinitionModel', verbose_name='设备厂商'),
        ),
        migrations.AlterUniqueTogether(
            name='partsinfordefinitionmodel',
            unique_together={('code', 'type')},
        ),
        migrations.AlterUniqueTogether(
            name='equipmentaccountmodel',
            unique_together={('code', 'type')},
        ),
    ]
